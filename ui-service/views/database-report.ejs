<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EMS - Database Report</title>
    <link rel="icon" href="/ico/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/ico/favicon.ico" type="image/x-icon">
    <link rel="apple-touch-icon" sizes="57x57" href="/ico/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/ico/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/ico/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/ico/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/ico/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/ico/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/ico/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/ico/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/ico/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/ico/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/ico/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/ico/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/ico/favicon-16x16.png">
    <link rel="manifest" href="/ico/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/ico/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.25/css/dataTables.bootstrap4.min.css">
    <style>
        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
            border: none;
            border-radius: 0.35rem;
        }
        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }
        .table-responsive {
            overflow-x: auto;
        }
        .bg-gradient-primary {
            background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
        }
        .text-primary {
            color: #4e73df !important;
        }
        .font-weight-bold {
            font-weight: 700 !important;
        }
        .pagination .page-item.active .page-link {
            background-color: #4e73df;
            border-color: #4e73df;
        }
        .pagination .page-item .page-link {
            color: #4e73df;
        }
        .btn-primary {
            background-color: #4e73df;
            border-color: #4e73df;
        }
        .btn-primary:hover {
            background-color: #2e59d9;
            border-color: #2653d4;
        }
        .btn-success {
            background-color: #1cc88a;
            border-color: #1cc88a;
        }
        .btn-success:hover {
            background-color: #17a673;
            border-color: #169b6b;
        }
        .btn-warning {
            background-color: #f6c23e;
            border-color: #f6c23e;
        }
        .btn-warning:hover {
            background-color: #f4b619;
            border-color: #f4b30d;
        }
        .btn-danger {
            background-color: #e74a3b;
            border-color: #e74a3b;
        }
        .btn-danger:hover {
            background-color: #e02d1b;
            border-color: #d52a1a;
        }
        .dataTables_filter {
            margin-bottom: 15px;
        }
        .badge-device {
            padding: 0.5em 0.75em;
            font-size: 75%;
        }
        .energy-summary {
            font-size: 1.1rem;
        }
        .chart-container {
            position: relative;
            height: 300px;
            margin-bottom: 20px;
        }
        .date-range-picker {
            background-color: #fff;
            border: 1px solid #ced4da;
            border-radius: 0.35rem;
            padding: 0.375rem 0.75rem;
        }
        .filter-section {
            background-color: #f8f9fc;
            border-radius: 0.35rem;
            padding: 15px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="/">Energy Monitoring System</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/energy-status"><i class="fas fa-bolt"></i> Energy Status</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="/database-report"><i class="fas fa-database"></i> Database Report</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/summary"><i class="fas fa-chart-bar"></i> Summary</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/controller"><i class="fas fa-sliders-h"></i> Controller</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/notifications"><i class="fas fa-bell"></i> Notifications</a>
            </li>
        </ul>
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </li>
        </ul>
    </div>
</nav>

<div class="container-fluid my-4">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Database Report</h1>
        <div>
            <button id="exportCSV" class="d-none d-sm-inline-block btn btn-sm btn-success shadow-sm mr-2">
                <i class="fas fa-file-csv fa-sm text-white-50 mr-1"></i> Export CSV
            </button>
            <button id="refreshData" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
                <i class="fas fa-sync-alt fa-sm text-white-50 mr-1"></i> Refresh Data
            </button>
        </div>
    </div>

    <div class="filter-section shadow-sm">
        <div class="row">
            <div class="col-md-3 mb-3">
                <label for="dateRange">Date Range</label>
                <input type="text" class="form-control date-range-picker" id="dateRange" placeholder="Select date range">
            </div>
            <div class="col-md-3 mb-3">
                <label for="deviceFilter">Device</label>
                <select class="form-control" id="deviceFilter">
                    <option value="">All Devices</option>
                    <% devices.forEach(function(device) { %>
                    <option value="<%= device.id %>"><%= device.name %></option>
                    <% }); %>
                </select>
            </div>
            <div class="col-md-3 mb-3">
                <label for="dataType">Data Type</label>
                <select class="form-control" id="dataType">
                    <option value="all">All Data</option>
                    <option value="power">Power Consumption</option>
                    <option value="energy">Energy Usage</option>
                    <option value="voltage">Voltage</option>
                    <option value="current">Current</option>
                </select>
            </div>
            <div class="col-md-3 mb-3">
                <label for="aggregation">Aggregation</label>
                <select class="form-control" id="aggregation">
                    <option value="none">No Aggregation</option>
                    <option value="hourly">Hourly</option>
                    <option value="daily">Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly">Monthly</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-12 text-right">
                <button id="applyFilters" class="btn btn-primary">Apply Filters</button>
                <button id="resetFilters" class="btn btn-secondary ml-2">Reset</button>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Data Visualization</h6>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="chartTypeDropdown" data-toggle="dropdown">
                            Line Chart
                        </button>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#" data-chart="line">Line Chart</a>
                            <a class="dropdown-item" href="#" data-chart="bar">Bar Chart</a>
                            <a class="dropdown-item" href="#" data-chart="area">Area Chart</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="dataChart"></canvas>
                    </div>
                    <div class="energy-summary text-center">
                        <strong>Total Energy Consumption:</strong> <span id="totalEnergy">124.5 kWh</span> |
                        <strong>Average Power:</strong> <span id="avgPower">420.8 W</span> |
                        <strong>Peak Power:</strong> <span id="peakPower">985.2 W</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Energy Data Records</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Timestamp</th>
                            <th>Device ID</th>
                            <th>Device Name</th>
                            <th>Power (W)</th>
                            <th>Energy (kWh)</th>
                            <th>Voltage (V)</th>
                            <th>Current (A)</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% data.forEach(function(record) { %>
                        <tr>
                            <td><%= new Date(record.timestamp).toLocaleString() %></td>
                            <td><%= record.device_id %></td>
                            <td><%= record.device_name %></td>
                            <td><%= record.power.toFixed(2) %></td>
                            <td><%= record.energy.toFixed(3) %></td>
                            <td><%= record.voltage.toFixed(1) %></td>
                            <td><%= record.current.toFixed(2) %></td>
                            <td>
                                <span class="badge badge-<%= record.state ? 'success' : 'danger' %>">
                                    <%= record.state ? 'ON' : 'OFF' %>
                                </span>
                            </td>
                            <td>
                                <button class="btn btn-sm btn-info view-details" data-id="<%= record._id %>">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button class="btn btn-sm btn-warning export-record" data-id="<%= record._id %>">
                                    <i class="fas fa-file-export"></i>
                                </button>
                                <button class="btn btn-sm btn-danger delete-record" data-id="<%= record._id %>">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Record Details Modal -->
<div class="modal fade" id="recordDetailsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-gradient-primary text-white">
                <h5 class="modal-title">Record Details</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Timestamp</label>
                            <input type="text" class="form-control" id="modal-timestamp" readonly>
                        </div>
                        <div class="form-group">
                            <label>Device ID</label>
                            <input type="text" class="form-control" id="modal-device-id" readonly>
                        </div>
                        <div class="form-group">
                            <label>Device Name</label>
                            <input type="text" class="form-control" id="modal-device-name" readonly>
                        </div>
                        <div class="form-group">
                            <label>Status</label>
                            <input type="text" class="form-control" id="modal-status" readonly>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Power (W)</label>
                            <input type="text" class="form-control" id="modal-power" readonly>
                        </div>
                        <div class="form-group">
                            <label>Energy (kWh)</label>
                            <input type="text" class="form-control" id="modal-energy" readonly>
                        </div>
                        <div class="form-group">
                            <label>Voltage (V)</label>
                            <input type="text" class="form-control" id="modal-voltage" readonly>
                        </div>
                        <div class="form-group">
                            <label>Current (A)</label>
                            <input type="text" class="form-control" id="modal-current" readonly>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label>Raw Data</label>
                    <pre id="modal-raw-data" class="bg-light p-3" style="max-height: 200px; overflow-y: auto;"></pre>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning" id="modal-export">Export Record</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this record? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

<footer class="bg-light py-3 mt-auto">
    <div class="container">
        <div class="text-center">
            <span class="text-muted">Energy Monitoring System &copy; 2025</span>
        </div>
    </div>
</footer>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/dataTables.bootstrap4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.css">

<script>
    // Function to generate sample table data from chart data
    function generateSampleTableData(timestamps, powerData, energyData) {
        const devices = ['Living Room', 'Kitchen', 'Bedroom', 'Office', 'Bathroom'];
        const deviceIds = ['DEV001', 'DEV002', 'DEV003', 'DEV004', 'DEV005'];
        const tableData = [];
        
        for (let i = 0; i < timestamps.length; i++) {
            // Calculate timestamp from the label
            const now = new Date();
            const parts = timestamps[i].split(':');
            const hour = parseInt(parts[0]);
            const minute = parseInt(parts[1]);
            
            const timestamp = new Date(now);
            timestamp.setHours(hour);
            timestamp.setMinutes(minute);
            timestamp.setSeconds(0);
            
            // Use data from the chart
            const power = powerData[i];
            const energy = i > 0 ? energyData[i] - energyData[i-1] : energyData[0];
            
            // Generate sample voltage (220-240V range)
            const voltage = Math.floor(Math.random() * 20) + 220;
            
            // Calculate current based on power and voltage
            const current = (power / voltage).toFixed(2);
            
            // Randomly select device
            const deviceIndex = Math.floor(Math.random() * devices.length);
            
            // Add to table data
            tableData.push({
                timestamp: timestamp.toLocaleString(),
                device_id: deviceIds[deviceIndex],
                device_name: devices[deviceIndex],
                power: power.toFixed(2),
                energy: energy.toFixed(3),
                voltage: voltage.toFixed(1),
                current: current,
                state: Math.random() > 0.3 ? 'ON' : 'OFF',
                actions: `<button class="btn btn-sm btn-info view-details" data-id="sample-${i}"><i class="fas fa-eye"></i></button>
                         <button class="btn btn-sm btn-warning export-record" data-id="sample-${i}"><i class="fas fa-file-export"></i></button>
                         <button class="btn btn-sm btn-danger delete-record" data-id="sample-${i}"><i class="fas fa-trash"></i></button>`
            });
        }
        
        return tableData;
    }

    $(document).ready(function() {
        // Initialize DataTable
        const dataTable = $('#dataTable').DataTable({
            order: [[0, 'desc']],
            pageLength: 10,
            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]]
        });

        // Initialize DateRangePicker
        $('#dateRange').daterangepicker({
            startDate: moment().subtract(7, 'days'),
            endDate: moment(),
            ranges: {
               'Today': [moment(), moment()],
               'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
               'Last 7 Days': [moment().subtract(6, 'days'), moment()],
               'Last 30 Days': [moment().subtract(29, 'days'), moment()],
               'This Month': [moment().startOf('month'), moment().endOf('month')],
               'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        });

        // Initialize Chart
        const ctx = document.getElementById('dataChart').getContext('2d');
        let chartType = 'line';
        
        // Sample data for chart
        const timestamps = Array(24).fill(0).map((_, i) => {
            const date = new Date();
            date.setHours(date.getHours() - 23 + i);
            return date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
        });
        
        const powerData = Array(24).fill(0).map(() => Math.floor(Math.random() * 500 + 200));
        const energyData = [];
        let cumulativeEnergy = 0;
        
        for (let i = 0; i < 24; i++) {
            cumulativeEnergy += powerData[i] / 1000 * (Math.random() * 0.5 + 0.5);
            energyData.push(cumulativeEnergy);
        }
        
        // Generate sample table data from chart data
        function generateTableData() {
            const devices = ['Living Room', 'Kitchen', 'Bedroom', 'Office', 'Bathroom'];
            const deviceIds = ['DEV001', 'DEV002', 'DEV003', 'DEV004', 'DEV005'];
            const tableData = [];
            
            for (let i = 0; i < timestamps.length; i++) {
                const now = new Date();
                const timeStr = timestamps[i];
                const parts = timeStr.split(':');
                const hour = parseInt(parts[0]);
                const minute = parseInt(parts[1] || 0);
                
                const timestamp = new Date(now);
                timestamp.setHours(hour);
                timestamp.setMinutes(minute);
                
                // Random device
                const deviceIndex = Math.floor(Math.random() * devices.length);
                const deviceName = devices[deviceIndex];
                const deviceId = deviceIds[deviceIndex];
                
                // Use data from chart
                const power = powerData[i];
                const energy = energyData[i] > 0 ? (i > 0 ? energyData[i] - energyData[i-1] : energyData[0]) : 0.1;
                
                // Random voltage between 220-240V
                const voltage = Math.floor(Math.random() * 20) + 220;
                
                // Calculate current based on power and voltage
                const current = (power / voltage).toFixed(2);
                
                // Add to table data
                tableData.push([
                    timestamp.toLocaleString(),
                    deviceId,
                    deviceName,
                    power.toFixed(1),
                    energy.toFixed(3),
                    voltage.toFixed(1),
                    current,
                    Math.random() > 0.2 ? '<span class="badge badge-success">ON</span>' : '<span class="badge badge-danger">OFF</span>',
                    '<button class="btn btn-sm btn-info view-details" data-id="sample-' + i + '"><i class="fas fa-eye"></i></button> ' +
                    '<button class="btn btn-sm btn-warning export-record" data-id="sample-' + i + '"><i class="fas fa-file-export"></i></button> ' +
                    '<button class="btn btn-sm btn-danger delete-record" data-id="sample-' + i + '"><i class="fas fa-trash"></i></button>'
                ]);
            }
            
            return tableData;
        }
        
        const dataChart = new Chart(ctx, {
            type: chartType,
            data: {
                labels: timestamps,
                datasets: [
                    {
                        label: 'Power (W)',
                        data: powerData,
                        borderColor: 'rgba(78, 115, 223, 1)',
                        backgroundColor: 'rgba(78, 115, 223, 0.1)',
                        tension: 0.3,
                        borderWidth: 2,
                        yAxisID: 'y'
                    },
                    {
                        label: 'Energy (kWh)',
                        data: energyData,
                        borderColor: 'rgba(28, 200, 138, 1)',
                        backgroundColor: 'rgba(28, 200, 138, 0.1)',
                        tension: 0.3,
                        borderWidth: 2,
                        yAxisID: 'y1'
                    }
                ]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    y: {
                        position: 'left',
                        title: {
                            display: true,
                            text: 'Power (W)'
                        }
                    },
                    y1: {
                        position: 'right',
                        title: {
                            display: true,
                            text: 'Energy (kWh)'
                        },
                        grid: {
                            drawOnChartArea: false
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index'
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.dataset.yAxisID === 'y') {
                                    label += context.parsed.y.toFixed(2) + ' W';
                                } else {
                                    label += context.parsed.y.toFixed(3) + ' kWh';
                                }
                                return label;
                            }
                        }
                    }
                }
            }
        });

        // Change chart type
        $('.dropdown-item[data-chart]').on('click', function(e) {
            e.preventDefault();
            chartType = $(this).data('chart');
            $('#chartTypeDropdown').text($(this).text());
            
            dataChart.config.type = chartType === 'area' ? 'line' : chartType;
            
            // For area chart, ensure fill is true
            dataChart.data.datasets.forEach(dataset => {
                dataset.fill = chartType === 'area';
            });
            
            dataChart.update();
        });

        // View record details
        $('.view-details').on('click', function() {
            const id = $(this).data('id');
            // In a real application, you would fetch the record data from the server
            // For demo purposes, we'll use the data from the row
            const row = $(this).closest('tr');
            const cols = row.find('td');
            
            $('#modal-timestamp').val($(cols[0]).text());
            $('#modal-device-id').val($(cols[1]).text());
            $('#modal-device-name').val($(cols[2]).text());
            $('#modal-power').val($(cols[3]).text());
            $('#modal-energy').val($(cols[4]).text());
            $('#modal-voltage').val($(cols[5]).text());
            $('#modal-current').val($(cols[6]).text());
            $('#modal-status').val($(cols[7]).text().trim());
            
            // Sample raw data
            const rawData = {
                _id: id,
                timestamp: $(cols[0]).text(),
                device_id: $(cols[1]).text(),
                device_name: $(cols[2]).text(),
                power: parseFloat($(cols[3]).text()),
                energy: parseFloat($(cols[4]).text()),
                voltage: parseFloat($(cols[5]).text()),
                current: parseFloat($(cols[6]).text()),
                state: $(cols[7]).text().trim() === 'ON',
                metadata: {
                    ip_address: "192.168.1." + Math.floor(Math.random() * 255),
                    firmware_version: "1.2.3",
                    location: "Office Room"
                }
            };
            
            $('#modal-raw-data').text(JSON.stringify(rawData, null, 2));
            $('#modal-export').data('id', id);
            
            $('#recordDetailsModal').modal('show');
        });

        // Delete record
        $('.delete-record').on('click', function() {
            const id = $(this).data('id');
            $('#confirmDelete').data('id', id);
            $('#deleteConfirmModal').modal('show');
        });

        // Confirm delete
        $('#confirmDelete').on('click', function() {
            const id = $(this).data('id');
            
            // In a real application, you would send a delete request to the server
            // For demo purposes, we'll just remove the row from the table
            dataTable.row($(`.delete-record[data-id="${id}"]`).closest('tr')).remove().draw();
            
            $('#deleteConfirmModal').modal('hide');
            
            // Show success toast or alert
            alert('Record deleted successfully');
        });

        // Export single record
        $('.export-record, #modal-export').on('click', function() {
            const id = $(this).data('id');
            alert(`Exporting record ${id} - In a real application, this would download a CSV or JSON file`);
        });

        // Export all filtered data
        $('#exportCSV').on('click', function() {
            alert('Exporting all filtered data - In a real application, this would download a CSV file with all current filtered records');
        });

        // Refresh data
        $('#refreshData').on('click', function() {
            $(this).find('i').addClass('fa-spin');
            
            // Simulate data refresh
            setTimeout(function() {
                // In a real application, you would fetch fresh data from the server
                // and update the table and chart
                
                // Update chart with new random data
                const newPowerData = Array(24).fill(0).map(() => Math.floor(Math.random() * 500 + 200));
                dataChart.data.datasets[0].data = newPowerData;
                
                // Reset cumulative energy and recalculate
                let newCumulativeEnergy = 0;
                const newEnergyData = [];
                
                for (let i = 0; i < 24; i++) {
                    newCumulativeEnergy += newPowerData[i] / 1000 * (Math.random() * 0.5 + 0.5);
                    newEnergyData.push(newCumulativeEnergy);
                }
                
                dataChart.data.datasets[1].data = newEnergyData;
                dataChart.update();
                
                // Update summary statistics
                $('#totalEnergy').text(newCumulativeEnergy.toFixed(2) + ' kWh');
                
                const avgPower = newPowerData.reduce((sum, val) => sum + val, 0) / 24;
                $('#avgPower').text(avgPower.toFixed(2) + ' W');
                
                const peakPower = Math.max(...newPowerData);
                $('#peakPower').text(peakPower.toFixed(2) + ' W');
                
                // Update table with new data that matches the chart
                const newTableData = generateTableData();
                dataTable.clear();
                dataTable.rows.add(newTableData).draw();
                
                $('#refreshData').find('i').removeClass('fa-spin');
                
                // Show success message
                alert('Data refreshed successfully');
            }, 1500);
        });

        // Apply filters
        $('#applyFilters').on('click', function() {
            const dateRange = $('#dateRange').val();
            const device = $('#deviceFilter').val();
            const dataType = $('#dataType').val();
            const aggregation = $('#aggregation').val();
            
            // In a real application, you would send these filters to the server
            // and update the table and chart with the filtered data
            
            alert(`Filters applied:\nDate Range: ${dateRange}\nDevice: ${device || 'All'}\nData Type: ${dataType}\nAggregation: ${aggregation}`);
        });

        // Reset filters
        $('#resetFilters').on('click', function() {
            $('#dateRange').data('daterangepicker').setStartDate(moment().subtract(7, 'days'));
            $('#dateRange').data('daterangepicker').setEndDate(moment());
            $('#deviceFilter').val('');
            $('#dataType').val('all');
            $('#aggregation').val('none');
        });
        
        // Fill the table with sample data immediately
        const tableData = generateTableData();
        dataTable.rows.add(tableData).draw();
        
        // Set up event handlers for the dynamically added buttons
        $('#dataTable').on('click', '.view-details', function() {
            const id = $(this).data('id');
            const row = $(this).closest('tr');
            const cells = row.find('td');
            
            $('#modal-timestamp').val($(cells[0]).text());
            $('#modal-device-id').val($(cells[1]).text());
            $('#modal-device-name').val($(cells[2]).text());
            $('#modal-power').val($(cells[3]).text());
            $('#modal-energy').val($(cells[4]).text());
            $('#modal-voltage').val($(cells[5]).text());
            $('#modal-current').val($(cells[6]).text());
            $('#modal-status').val($(cells[7]).text().trim() === 'ON' ? 'ON' : 'OFF');
            
            // Sample raw data
            const rawData = {
                _id: id,
                timestamp: $(cells[0]).text(),
                device_id: $(cells[1]).text(),
                device_name: $(cells[2]).text(),
                power: parseFloat($(cells[3]).text()),
                energy: parseFloat($(cells[4]).text()),
                voltage: parseFloat($(cells[5]).text()),
                current: parseFloat($(cells[6]).text()),
                state: $(cells[7]).text().trim() === 'ON',
                metadata: {
                    ip_address: "192.168.1." + Math.floor(Math.random() * 255),
                    firmware_version: "1.2.3",
                    location: "Office Room"
                }
            };
            
            $('#modal-raw-data').text(JSON.stringify(rawData, null, 2));
            $('#modal-export').data('id', id);
            
            $('#recordDetailsModal').modal('show');
        });
        
        $('#dataTable').on('click', '.delete-record', function() {
            const id = $(this).data('id');
            $('#confirmDelete').data('id', id);
            $('#deleteConfirmModal').modal('show');
        });
        
        $('#dataTable').on('click', '.export-record', function() {
            const id = $(this).data('id');
            alert(`Exporting record ${id} - In a real application, this would download a CSV or JSON file`);
        });
    });
</script>
</body>
</html>
