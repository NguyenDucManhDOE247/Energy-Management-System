<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EMS - Energy Status</title>
    <link rel="icon" href="/ico/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/ico/favicon.ico" type="image/x-icon">
    <link rel="apple-touch-icon" sizes="57x57" href="/ico/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/ico/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/ico/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/ico/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/ico/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/ico/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/ico/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/ico/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/ico/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/ico/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/ico/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/ico/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/ico/favicon-16x16.png">
    <link rel="manifest" href="/ico/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/ico/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .device-card {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        .device-card:hover {
            transform: translateY(-5px);
        }
        .device-header {
            padding: 15px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            position: relative;
        }
        .device-status {
            position: absolute;
            top: 15px;
            right: 15px;
            width: 15px;
            height: 15px;
            border-radius: 50%;
        }
        .status-online {
            background-color: #1cc88a;
            box-shadow: 0 0 5px #1cc88a;
        }
        .status-offline {
            background-color: #e74a3b;
            box-shadow: 0 0 5px #e74a3b;
        }
        .device-body {
            padding: 20px;
        }
        .power-indicator {
            height: 6px;
            border-radius: 3px;
            background-color: #eaecf4;
            margin-bottom: 8px;
            overflow: hidden;
        }
        .power-bar {
            height: 100%;
            background: linear-gradient(45deg, #4e73df, #224abe);
            transition: width 0.5s ease;
        }
        .meter-value {
            font-size: 2rem;
            font-weight: bold;
        }
        .meter-label {
            color: #858796;
            font-size: 0.9rem;
        }
        .refresh-btn {
            position: absolute;
            bottom: 15px;
            right: 15px;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: #f8f9fc;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .refresh-btn:hover {
            background-color: #4e73df;
            color: white;
        }
        .refresh-btn i {
            transition: transform 0.5s ease;
        }
        .refresh-btn.refreshing i {
            transform: rotate(180deg);
        }
        .chart-container {
            height: 300px;
        }
    </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="/">Energy Monitoring System</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="/energy-status"><i class="fas fa-bolt"></i> Energy Status</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/database-report"><i class="fas fa-database"></i> Database Report</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/summary"><i class="fas fa-chart-bar"></i> Summary</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/controller"><i class="fas fa-sliders-h"></i> Controller</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/notifications"><i class="fas fa-bell"></i> Notifications</a>
            </li>
        </ul>
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </li>
        </ul>
    </div>
</nav>

<div class="container-fluid my-4">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Energy Status</h1>
        <button id="refreshAll" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
            <i class="fas fa-sync-alt fa-sm text-white-50 mr-1"></i> Refresh All
        </button>
    </div>

    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Real-time Power Consumption</h6>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="timeRangeDropdown" data-toggle="dropdown">
                            Last Hour
                        </button>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#">Last Hour</a>
                            <a class="dropdown-item" href="#">Last 3 Hours</a>
                            <a class="dropdown-item" href="#">Last 12 Hours</a>
                            <a class="dropdown-item" href="#">Last 24 Hours</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="realTimeChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Overall Statistics</h6>
                    <small id="lastRefreshTime" class="text-muted">-</small>
                </div>
                <div class="card-body">
                    <div class="row align-items-center mb-4">
                        <div class="col-auto">
                            <i class="fas fa-bolt fa-2x text-warning"></i>
                        </div>
                        <div class="col">
                            <div class="progress progress-sm mr-2">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: 65%" aria-valuenow="65" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <div class="d-flex justify-content-between mt-1">
                                <span class="text-xs">Current Load</span>
                                <span class="text-xs font-weight-bold">65%</span>
                            </div>
                        </div>
                    </div>
                    <div class="mb-4">
                        <div class="d-flex justify-content-between">
                            <h4 class="small font-weight-bold">Total Active Devices</h4>
                            <span class="text-primary">5/9</span>
                        </div>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-primary" role="progressbar" style="width: 55%" aria-valuenow="55" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <div class="mb-4">
                        <div class="d-flex justify-content-between">
                            <h4 class="small font-weight-bold">Total Power Consumption</h4>
                            <span class="text-success">750W</span>
                        </div>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-success" role="progressbar" style="width: 42%" aria-valuenow="42" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <div class="mb-4">
                        <div class="d-flex justify-content-between">
                            <h4 class="small font-weight-bold">Today's Energy</h4>
                            <span class="text-info">4.8 kWh</span>
                        </div>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-info" role="progressbar" style="width: 32%" aria-valuenow="32" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <div>
                        <div class="d-flex justify-content-between">
                            <h4 class="small font-weight-bold">Today's Cost</h4>
                            <span class="text-danger">$0.72</span>
                        </div>
                        <div class="progress">
                            <div class="progress-bar bg-danger" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" id="deviceContainer">
        <% energyData.forEach(function(device, index) { %>
        <div class="col-xl-3 col-md-4 col-sm-6 mb-4">
            <div class="device-card">
                <div class="device-header bg-light">
                    <h5 class="device-title mb-0"><%= device.device_id %></h5>
                    <div class="device-status <%= device.state ? 'status-online' : 'status-offline' %>"></div>
                </div>
                <div class="device-body position-relative">
                    <div class="row mb-4">
                        <div class="col text-center">
                            <div class="meter-value"><%= device.power.toFixed(1) %></div>
                            <div class="meter-label">Watts</div>
                        </div>
                        <div class="col text-center">
                            <div class="meter-value"><%= device.voltage.toFixed(1) %></div>
                            <div class="meter-label">Volts</div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col text-center">
                            <div class="meter-value"><%= device.current.toFixed(2) %></div>
                            <div class="meter-label">Amps</div>
                        </div>
                        <div class="col text-center">
                            <div class="meter-value"><%= device.energy.toFixed(3) %></div>
                            <div class="meter-label">kWh</div>
                        </div>
                    </div>
                    <div class="power-indicator">
                        <div class="power-bar" style="width: <%= Math.min(device.power / 20, 100) %>%"></div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <small class="text-muted">Updated: <%= new Date(device.timestamp).toLocaleTimeString() %></small>
                        <small class="text-<%= device.state ? 'success' : 'danger' %>"><%= device.state ? 'ON' : 'OFF' %></small>
                    </div>
                    <div class="refresh-btn" data-device="<%= device.device_id %>">
                        <i class="fas fa-sync-alt"></i>
                    </div>
                </div>
            </div>
        </div>
        <% }); %>
    </div>
</div>

<footer class="bg-light py-3 mt-auto">
    <div class="container">
        <div class="text-center">
            <span class="text-muted">Energy Monitoring System &copy; 2025</span>
        </div>
    </div>
</footer>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
<script>
    $(document).ready(function() {
        // Real-time chart setup
        const ctx = document.getElementById('realTimeChart').getContext('2d');
        const labels = Array(60).fill('').map((_, i) => `${59 - i}m ago`).reverse();
        const data = Array(60).fill(0).map(() => Math.random() * 800 + 200);
        
        const realTimeChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Power (W)',
                    data: data,
                    backgroundColor: 'rgba(78, 115, 223, 0.05)',
                    borderColor: 'rgba(78, 115, 223, 1)',
                    borderWidth: 2,
                    pointRadius: 0,
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: 'rgba(78, 115, 223, 1)',
                    pointHoverBorderColor: '#fff',
                    tension: 0.3,
                    fill: true
                }]
            },
            options: {
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        suggestedMax: 1000,
                        grid: {
                            drawBorder: false
                        },
                        ticks: {
                            callback: function(value) {
                                return value + 'W';
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            autoSkip: true,
                            maxTicksLimit: 10
                        }
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index'
                }
            }
        });

        // Refresh individual device
        $('.refresh-btn').on('click', function() {
            const btn = $(this);
            const deviceId = btn.data('device');
            
            btn.addClass('refreshing');
            
            // Simulate API call
            setTimeout(function() {
                // In a real app, this would be an actual API call
                // $.get(`/api/data/device/${deviceId}`, function(data) {
                //     // Update device data
                // });
                
                // For demo, just update with random values
                const powerValue = btn.closest('.device-body').find('.meter-value').first();
                const newPower = (Math.random() * 300 + 100).toFixed(1);
                powerValue.text(newPower);
                
                const powerBar = btn.closest('.device-body').find('.power-bar');
                powerBar.css('width', `${Math.min(newPower / 20, 100)}%`);
                
                btn.removeClass('refreshing');
            }, 1000);
        });

        // Refresh all devices
        $('#refreshAll').on('click', function() {
            $(this).find('i').addClass('fa-spin');
            
            // Simulate API call
            setTimeout(function() {
                // Update the chart
                realTimeChart.data.datasets[0].data.shift();
                realTimeChart.data.datasets[0].data.push(Math.random() * 800 + 200);
                realTimeChart.update();
                
                // Update device cards
                $('.refresh-btn').each(function() {
                    $(this).click();
                });
                
                // Update last refresh time
                const now = new Date();
                $('#lastRefreshTime').text(now.toLocaleTimeString());
                
                $('#refreshAll').find('i').removeClass('fa-spin');
            }, 1000);
        });

        // Simplified update logic - keep UI working
        function updateLatestData(data) {
            console.log('Updated with data:', data);
            // Update timestamp
            const now = new Date();
            $('#lastRefreshTime').text(now.toLocaleTimeString());
        }
        
        // Auto-refresh every 30 seconds
        setInterval(function() {
            $.get('/api/proxy/data/current', function(data) {
                console.log('Auto-refreshed data:', data);
                
                // Update chart with new point
                realTimeChart.data.datasets[0].data.shift();
                realTimeChart.data.datasets[0].data.push(Math.random() * 800 + 200);
                realTimeChart.update();
                
                // Update last refresh time
                const now = new Date();
                $('#lastRefreshTime').text(now.toLocaleTimeString());
            }).fail(function(error) {
                console.error('Error fetching current data:', error);
                // Update chart anyway
                realTimeChart.data.datasets[0].data.shift();
                realTimeChart.data.datasets[0].data.push(Math.random() * 800 + 200);
                realTimeChart.update();
                
                // Update last refresh time with error indicator
                const now = new Date();
                $('#lastRefreshTime').text(now.toLocaleTimeString() + ' (sample data)');
            });
        }, 30000);
    });
</script>
</body>
</html>
