<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EMS - Notifications</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
            border: none;
            border-radius: 0.35rem;
            margin-bottom: 1.5rem;
        }
        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }
        .notification-item {
            padding: 1rem;
            border-bottom: 1px solid #e3e6f0;
            transition: background-color 0.3s ease;
        }
        .notification-item:last-child {
            border-bottom: none;
        }
        .notification-item:hover {
            background-color: #f8f9fc;
        }
        .notification-item.unread {
            background-color: rgba(78, 115, 223, 0.05);
        }
        .notification-item.unread:hover {
            background-color: rgba(78, 115, 223, 0.1);
        }
        .notification-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }
        .icon-warning {
            background-color: rgba(246, 194, 62, 0.2);
            color: #f6c23e;
        }
        .icon-danger {
            background-color: rgba(231, 74, 59, 0.2);
            color: #e74a3b;
        }
        .icon-info {
            background-color: rgba(54, 185, 204, 0.2);
            color: #36b9cc;
        }
        .icon-success {
            background-color: rgba(28, 200, 138, 0.2);
            color: #1cc88a;
        }
        .notification-content {
            margin-left: 15px;
        }
        .notification-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }
        .notification-time {
            font-size: 0.8rem;
            color: #858796;
        }
        .notification-message {
            margin-bottom: 0;
            color: #5a5c69;
        }
        .notification-actions {
            margin-top: 0.5rem;
        }
        .settings-section {
            margin-bottom: 2rem;
        }
        .settings-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: #4e73df;
            border-bottom: 1px solid #e3e6f0;
            padding-bottom: 0.5rem;
        }
        .custom-control-label {
            cursor: pointer;
        }
        .notification-badge {
            position: absolute;
            top: -5px;
            right: -7px;
            font-size: 0.7rem;
            padding: 0.2rem 0.45rem;
        }
        .empty-state {
            text-align: center;
            padding: 2rem;
            color: #858796;
        }
        .empty-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #dddfeb;
        }
        .filter-tab {
            cursor: pointer;
            padding: 0.5rem 1rem;
            border-radius: 0.35rem;
            transition: background-color 0.3s ease;
            font-weight: 500;
        }
        .filter-tab:hover {
            background-color: #eaecf4;
        }
        .filter-tab.active {
            background-color: #4e73df;
            color: white;
        }
    </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="/">Energy Monitoring System</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/energy-status"><i class="fas fa-bolt"></i> Energy Status</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/database-report"><i class="fas fa-database"></i> Database Report</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/summary"><i class="fas fa-chart-bar"></i> Summary</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/controller"><i class="fas fa-sliders-h"></i> Controller</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="/notifications"><i class="fas fa-bell"></i> Notifications</a>
            </li>
        </ul>
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </li>
        </ul>
    </div>
</nav>

<div class="container-fluid my-4">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Notifications</h1>
        <div>
            <button id="markAllRead" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm mr-2">
                <i class="fas fa-check fa-sm text-white-50 mr-1"></i> Mark All as Read
            </button>
            <button id="settingsToggle" class="d-none d-sm-inline-block btn btn-sm btn-secondary shadow-sm" data-toggle="collapse" data-target="#notificationSettings">
                <i class="fas fa-cog fa-sm text-white-50 mr-1"></i> Notification Settings
            </button>
        </div>
    </div>

    <div class="collapse mb-4" id="notificationSettings">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Notification Settings</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="settings-section">
                            <div class="settings-title">Delivery Methods</div>
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="emailNotifications" checked>
                                <label class="custom-control-label" for="emailNotifications">Email Notifications</label>
                            </div>
                            <div class="form-group">
                                <input type="email" class="form-control" id="emailAddress" value="user@example.com" placeholder="Email address">
                            </div>
                            
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="pushNotifications" checked>
                                <label class="custom-control-label" for="pushNotifications">Push Notifications</label>
                            </div>
                            
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="smsNotifications">
                                <label class="custom-control-label" for="smsNotifications">SMS Notifications</label>
                            </div>
                            <div class="form-group">
                                <input type="tel" class="form-control" id="phoneNumber" placeholder="Phone number" disabled>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-lg-6">
                        <div class="settings-section">
                            <div class="settings-title">Alert Types</div>
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="powerAlerts" checked>
                                <label class="custom-control-label" for="powerAlerts">Power Usage Alerts</label>
                            </div>
                            <div class="form-group">
                                <label for="powerThreshold">Power Threshold (W)</label>
                                <input type="number" class="form-control" id="powerThreshold" value="1000">
                            </div>
                            
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="deviceStatusAlerts" checked>
                                <label class="custom-control-label" for="deviceStatusAlerts">Device Status Changes</label>
                            </div>
                            
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="systemAlerts" checked>
                                <label class="custom-control-label" for="systemAlerts">System Alerts</label>
                            </div>
                            
                            <div class="custom-control custom-switch mb-2">
                                <input type="checkbox" class="custom-control-input" id="costAlerts">
                                <label class="custom-control-label" for="costAlerts">Cost Prediction Alerts</label>
                            </div>
                            <div class="form-group">
                                <label for="costThreshold">Monthly Budget ($)</label>
                                <input type="number" class="form-control" id="costThreshold" value="150" disabled>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="text-right mt-3">
                    <button class="btn btn-primary" id="saveSettings">Save Settings</button>
                    <button class="btn btn-secondary ml-2" data-toggle="collapse" data-target="#notificationSettings">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">Notification Center</h6>
                    <div class="d-flex">
                        <div class="filter-tab active mr-2" data-filter="all">All</div>
                        <div class="filter-tab mr-2" data-filter="unread">Unread</div>
                        <div class="filter-tab mr-2" data-filter="alerts">Alerts</div>
                        <div class="filter-tab" data-filter="info">Info</div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="notification-list">
                        <% if (notifications && notifications.length > 0) { %>
                            <% notifications.forEach(function(notification) { %>
                                <div class="notification-item d-flex <%= notification.read ? '' : 'unread' %>" data-id="<%= notification._id %>" data-type="<%= notification.type %>">
                                    <div class="notification-icon icon-<%= notification.severity %>">
                                        <% if (notification.severity === 'danger') { %>
                                            <i class="fas fa-exclamation-triangle"></i>
                                        <% } else if (notification.severity === 'warning') { %>
                                            <i class="fas fa-exclamation-circle"></i>
                                        <% } else if (notification.severity === 'success') { %>
                                            <i class="fas fa-check-circle"></i>
                                        <% } else { %>
                                            <i class="fas fa-info-circle"></i>
                                        <% } %>
                                    </div>
                                    <div class="notification-content">
                                        <div class="d-flex justify-content-between">
                                            <h6 class="notification-title"><%= notification.title %></h6>
                                            <span class="notification-time"><%= notification.timeAgo %></span>
                                        </div>
                                        <p class="notification-message"><%= notification.message %></p>
                                        <div class="notification-actions">
                                            <button class="btn btn-sm btn-outline-primary mark-read" data-id="<%= notification._id %>">
                                                Mark as <%= notification.read ? 'Unread' : 'Read' %>
                                            </button>
                                            <% if (notification.actionUrl) { %>
                                                <a href="<%= notification.actionUrl %>" class="btn btn-sm btn-primary ml-2">View Details</a>
                                            <% } %>
                                            <button class="btn btn-sm btn-outline-danger ml-2 delete-notification" data-id="<%= notification._id %>">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="empty-state">
                                <div class="empty-icon">
                                    <i class="fas fa-bell-slash"></i>
                                </div>
                                <h5>No Notifications</h5>
                                <p>You don't have any notifications at the moment.</p>
                            </div>
                        <% } %>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between align-items-center">
                        <span><%= notifications ? notifications.length : 0 %> notification(s)</span>
                        <button class="btn btn-sm btn-danger" id="clearAll">Clear All</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Alerts</h6>
                </div>
                <div class="card-body">
                    <div class="alert alert-danger">
                        <strong>High Power Usage Alert!</strong>
                        <p class="mb-0">Device "Smart Plug 1" exceeded threshold (1200W) at 13:45 today.</p>
                    </div>
                    <div class="alert alert-warning">
                        <strong>Device Offline</strong>
                        <p class="mb-0">Device "Smart Plug 3" went offline at 09:22 today.</p>
                    </div>
                    <div class="alert alert-info">
                        <strong>Energy Consumption Trend</strong>
                        <p class="mb-0">Your energy usage increased by 15% compared to last week.</p>
                    </div>
                </div>
            </div>
            
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Alert History</h6>
                </div>
                <div class="card-body">
                    <div id="alertChart" style="height: 250px;">
                        <canvas id="alertChartCanvas"></canvas>
                    </div>
                    
                    <div class="mt-4">
                        <h6 class="font-weight-bold">Alert Summary</h6>
                        <div class="d-flex justify-content-between">
                            <span>Critical</span>
                            <span>3</span>
                        </div>
                        <div class="progress mb-2" style="height: 5px;">
                            <div class="progress-bar bg-danger" style="width: 15%"></div>
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <span>Warning</span>
                            <span>8</span>
                        </div>
                        <div class="progress mb-2" style="height: 5px;">
                            <div class="progress-bar bg-warning" style="width: 40%"></div>
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <span>Info</span>
                            <span>12</span>
                        </div>
                        <div class="progress mb-2" style="height: 5px;">
                            <div class="progress-bar bg-info" style="width: 60%"></div>
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <span>Success</span>
                            <span>5</span>
                        </div>
                        <div class="progress" style="height: 5px;">
                            <div class="progress-bar bg-success" style="width: 25%"></div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-center">
                    <a href="#" class="btn btn-sm btn-primary">View Full Alert History</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this notification? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Clear All Confirmation Modal -->
<div class="modal fade" id="clearAllModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Clear All</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete all notifications? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmClearAll">Clear All</button>
            </div>
        </div>
    </div>
</div>

<footer class="bg-light py-3 mt-auto">
    <div class="container">
        <div class="text-center">
            <span class="text-muted">Energy Monitoring System &copy; 2025</span>
        </div>
    </div>
</footer>

<!-- Use more stable jQuery 3.6.1 version to avoid errors -->
<script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
<!-- Add fallback in case CDN doesn't work -->
<script>
    if (typeof jQuery === 'undefined') {
        document.write('<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"><\/script>');
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>

<script>
    // Fix jQuery with getContext
    $(document).ready(function() {
        // Create safe wrapper for using canvas and getContext
        window.safeGetCanvasContext = function(elementId, contextType = '2d') {
            try {
                // Use vanilla JavaScript to get the actual DOM element instead of jQuery object
                const element = document.getElementById(elementId);
                if (element && typeof element.getContext === 'function') {
                    return element.getContext(contextType);
                } else {
                    console.error(`Element not found or getContext doesn't exist for: ${elementId}`);
                    return null;
                }
            } catch (error) {
                console.error('Error getting canvas context:', error);
                return null;
            }
        }
    });

    // Handle document ready
    $(document).ready(function() {
        // Sample notifications for demo
        const demoNotifications = [
            {
                _id: '1',
                title: 'High Power Usage Detected',
                message: 'Device "Smart Plug 1" has exceeded the power threshold of 1200W. Current power usage: 1350W.',
                severity: 'danger',
                type: 'alerts',
                read: false,
                timeAgo: '10 minutes ago',
                actionUrl: '/energy-status'
            },
            {
                _id: '2',
                title: 'Device Offline',
                message: 'Device "Smart Plug 3" is offline. Last seen: 09:22 AM today.',
                severity: 'warning',
                type: 'alerts',
                read: false,
                timeAgo: '2 hours ago',
                actionUrl: '/controller'
            },
            {
                _id: '3',
                title: 'Energy Usage Trend',
                message: 'Your energy usage has increased by 15% compared to last week. Click to view detailed analysis.',
                severity: 'info',
                type: 'info',
                read: true,
                timeAgo: '1 day ago',
                actionUrl: '/summary'
            },
            {
                _id: '4',
                title: 'System Update Available',
                message: 'A new system update (v2.3.1) is available. This update includes performance improvements and bug fixes.',
                severity: 'info',
                type: 'info',
                read: true,
                timeAgo: '3 days ago',
                actionUrl: null
            },
            {
                _id: '5',
                title: 'Schedule Successfully Applied',
                message: 'The schedule for "Smart Plug 2" has been successfully applied. The device will turn on at 07:00 AM and turn off at 10:00 PM daily.',
                severity: 'success',
                type: 'info',
                read: true,
                timeAgo: '4 days ago',
                actionUrl: '/controller'
            }
        ];
        
        // Render notifications if not server-rendered
        if ($('.notification-item').length === 0) {
            const notificationList = $('.notification-list');
            notificationList.empty();
            
            if (demoNotifications.length > 0) {
                demoNotifications.forEach(notification => {
                    let iconClass;
                    if (notification.severity === 'danger') {
                        iconClass = 'fas fa-exclamation-triangle';
                    } else if (notification.severity === 'warning') {
                        iconClass = 'fas fa-exclamation-circle';
                    } else if (notification.severity === 'success') {
                        iconClass = 'fas fa-check-circle';
                    } else {
                        iconClass = 'fas fa-info-circle';
                    }
                    
                    const html = `
                        <div class="notification-item d-flex ${notification.read ? '' : 'unread'}" data-id="${notification._id}" data-type="${notification.type}">
                            <div class="notification-icon icon-${notification.severity}">
                                <i class="${iconClass}"></i>
                            </div>
                            <div class="notification-content">
                                <div class="d-flex justify-content-between">
                                    <h6 class="notification-title">${notification.title}</h6>
                                    <span class="notification-time">${notification.timeAgo}</span>
                                </div>
                                <p class="notification-message">${notification.message}</p>
                                <div class="notification-actions">
                                    <button class="btn btn-sm btn-outline-primary mark-read" data-id="${notification._id}">
                                        Mark as ${notification.read ? 'Unread' : 'Read'}
                                    </button>
                                    ${notification.actionUrl ? `<a href="${notification.actionUrl}" class="btn btn-sm btn-primary ml-2">View Details</a>` : ''}
                                    <button class="btn btn-sm btn-outline-danger ml-2 delete-notification" data-id="${notification._id}">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                    
                    notificationList.append(html);
                });
                
                // Update notification count
                $('.card-footer span').text(`${demoNotifications.length} notification(s)`);
            } else {
                notificationList.html(`
                    <div class="empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-bell-slash"></i>
                        </div>
                        <h5>No Notifications</h5>
                        <p>You don't have any notifications at the moment.</p>
                    </div>
                `);
                $('.card-footer span').text('0 notification(s)');
            }
        }
        
        // Initialize the alert chart - Sử dụng helper function an toàn hơn
        const alertChartElem = document.getElementById('alertChartCanvas');
        if (alertChartElem) {
            const ctx = window.safeGetCanvasContext('alertChartCanvas');
            
            // Last 7 days
            const labels = Array.from({length: 7}, (_, i) => {
                const date = new Date();
                date.setDate(date.getDate() - 6 + i);
                return date.toLocaleDateString(undefined, { weekday: 'short' });
            });
            
            // Sample data for chart
            const data = {
                labels: labels,
                datasets: [
                    {
                        label: 'Critical',
                        data: [1, 0, 0, 1, 0, 0, 1],
                        backgroundColor: '#e74a3b',
                        borderWidth: 0,
                        barPercentage: 0.6,
                        categoryPercentage: 0.7
                    },
                    {
                        label: 'Warning',
                        data: [2, 1, 0, 2, 1, 1, 1],
                        backgroundColor: '#f6c23e',
                        borderWidth: 0,
                        barPercentage: 0.6,
                        categoryPercentage: 0.7
                    },
                    {
                        label: 'Info',
                        data: [1, 2, 3, 1, 2, 1, 2],
                        backgroundColor: '#36b9cc',
                        borderWidth: 0,
                        barPercentage: 0.6,
                        categoryPercentage: 0.7
                    }
                ]
            };
            
            // Only create chart if ctx exists
            let alertChart;
            if (ctx) {
                alertChart = new Chart(ctx, {
                type: 'bar',
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                boxWidth: 12,
                                usePointStyle: true,
                                pointStyle: 'rect'
                            }
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    },
                    scales: {
                        x: {
                            stacked: true
                        },
                        y: {
                            stacked: true,
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
            }
        }
        
        // Filter notifications
        $('.filter-tab').on('click', function() {
            $('.filter-tab').removeClass('active');
            $(this).addClass('active');
            
            const filter = $(this).data('filter');
            
            if (filter === 'all') {
                $('.notification-item').show();
            } else if (filter === 'unread') {
                $('.notification-item').hide();
                $('.notification-item.unread').show();
            } else {
                $('.notification-item').hide();
                $(`.notification-item[data-type="${filter}"]`).show();
            }
        });
        
        // Mark as read/unread
        $(document).on('click', '.mark-read', function() {
            const id = $(this).data('id');
            const item = $(this).closest('.notification-item');
            const isRead = !item.hasClass('unread');
            
            // Toggle class
            if (isRead) {
                item.addClass('unread');
                $(this).text('Mark as Read');
            } else {
                item.removeClass('unread');
                $(this).text('Mark as Unread');
            }
            
            // In a real app, you would send an API request
            // $.post('/api/proxy/notifications/' + id + '/toggle-read');
        });
        
        // Mark all as read
        $('#markAllRead').on('click', function() {
            $('.notification-item.unread').removeClass('unread');
            $('.mark-read').text('Mark as Unread');
            
            // In a real app, you would send an API request
            // $.post('/api/proxy/notifications/mark-all-read');
        });
        
        // Delete notification
        let notificationToDelete = null;
        
        $(document).on('click', '.delete-notification', function() {
            notificationToDelete = $(this).data('id');
            $('#deleteModal').modal('show');
        });
        
        $('#confirmDelete').on('click', function() {
            if (notificationToDelete) {
                // Remove the notification from the UI
                $(`.notification-item[data-id="${notificationToDelete}"]`).remove();
                
                // Update notification count
                const count = $('.notification-item').length;
                $('.card-footer span').text(`${count} notification(s)`);
                
                // Show empty state if no notifications
                if (count === 0) {
                    $('.notification-list').html(`
                        <div class="empty-state">
                            <div class="empty-icon">
                                <i class="fas fa-bell-slash"></i>
                            </div>
                            <h5>No Notifications</h5>
                            <p>You don't have any notifications at the moment.</p>
                        </div>
                    `);
                }
                
                // In a real app, you would send an API request
                // $.post('/api/proxy/notifications/' + notificationToDelete + '/delete');
                
                $('#deleteModal').modal('hide');
                notificationToDelete = null;
            }
        });
        
        // Clear all notifications
        $('#clearAll').on('click', function() {
            $('#clearAllModal').modal('show');
        });
        
        $('#confirmClearAll').on('click', function() {
            // Remove all notifications from the UI
            $('.notification-list').html(`
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-bell-slash"></i>
                    </div>
                    <h5>No Notifications</h5>
                    <p>You don't have any notifications at the moment.</p>
                </div>
            `);
            
            // Update notification count
            $('.card-footer span').text('0 notification(s)');
            
            // In a real app, you would send an API request
            // $.post('/api/proxy/notifications/clear-all');
            
            $('#clearAllModal').modal('hide');
        });
        
        // Toggle SMS notifications
        $('#smsNotifications').on('change', function() {
            $('#phoneNumber').prop('disabled', !this.checked);
        });
        
        // Toggle cost alerts
        $('#costAlerts').on('change', function() {
            $('#costThreshold').prop('disabled', !this.checked);
        });
        
        // Save notification settings
        $('#saveSettings').on('click', function() {
            // Collect settings
            const settings = {
                email: {
                    enabled: $('#emailNotifications').is(':checked'),
                    address: $('#emailAddress').val()
                },
                push: {
                    enabled: $('#pushNotifications').is(':checked')
                },
                sms: {
                    enabled: $('#smsNotifications').is(':checked'),
                    phoneNumber: $('#phoneNumber').val()
                },
                alerts: {
                    power: {
                        enabled: $('#powerAlerts').is(':checked'),
                        threshold: $('#powerThreshold').val()
                    },
                    deviceStatus: $('#deviceStatusAlerts').is(':checked'),
                    system: $('#systemAlerts').is(':checked'),
                    cost: {
                        enabled: $('#costAlerts').is(':checked'),
                        threshold: $('#costThreshold').val()
                    }
                }
            };
            
            // In a real app, you would send an API request
            console.log('Saving notification settings:', settings);
            // $.post('/api/proxy/notifications/settings', settings);
            
            // Close settings panel
            $('#notificationSettings').collapse('hide');
            
            // Show success message
            alert('Notification settings saved successfully!');
        });
    });
</script>
</body>
</html>
